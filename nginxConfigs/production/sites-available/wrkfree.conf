# web servers
upstream webServer {
    server app:3000;
}

# api servers
upstream webSocket {
    server app:3050 fail_timeout=20s;
}

# Redirect all non-SSL traffic to SSL
server {
    listen      80;
    server_name wrkfree.com;
    rewrite     ^   https://$server_name$request_uri? permanent;
}

# the nginx server instance
server {
    listen 443 ssl;

    # NOTE: to replace below path based on your nginx folder
    ssl_certificate /etc/nginx/ssl/meetfree.crt;
    ssl_certificate_key /etc/nginx/ssl/meetfree.key;

    server_name wrkfree.com;

    # sepcify the root path of static files, the root path directory should be the same owner as nginx user
    # NOTE: to replace below path based on your working folder
    root /workspace/wrkfree2.0/webServer/build/public;

    location / {
        index index.html;
    }

    # an internal routes for serving protected files, backend server will send req to nginx
    # NOTE: to replace below path based on your working folder
    location /protected {
        internal;
        alias /workspace/wrkfree2.0/webServer/build/protected;
    }

    # proxy the request to backend web servers
    location /app {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://webServer;
        proxy_redirect off;
    }

    # proxy the request to backend web servers
    location /auth {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://webServer;
        proxy_redirect off;
    }

    # proxy the request to backend api servers
    location /ws {
        proxy_pass http://webSocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
